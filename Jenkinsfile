pipeline {
    agent any
    environment {
        GH_TOKEN = credentials('github-credentials')
    }
    stages {
        stage('Lint commit messages') {
            steps {
                sh 'npm install --save-dev @commitlint/config-conventional @commitlint/cli'
                sh 'npx commitlint --from=HEAD~1'
            }
        }
        stage('Helm Lint') {
            steps {
                sh 'helm lint .'
            }
        }
        stage('Helm Template') {
            steps {
                sh 'helm template .'
            }
        }
    }
    post {
        success {
            updateGitHubStatus('SUCCESS')
        }
        failure {
            updateGitHubStatus('FAILURE')
        }
    }
}

def updateGitHubStatus(String state) {
    def context = 'jenkins-helm-ci'
    def repoUrl = "https://api.github.com/repos/${env.GITHUB_REPOSITORY}/statuses/${env.GIT_COMMIT}"
    def body = [
        state: state.toLowerCase(),
        target_url: env.BUILD_URL,
        description: "Jenkins build ${state.toLowerCase()}",
        context: context
    ]
    
    httpRequest(
        acceptType: 'APPLICATION_JSON',
        contentType: 'APPLICATION_JSON',
        httpMode: 'POST',
        requestBody: groovy.json.JsonOutput.toJson(body),
        url: repoUrl,
        customHeaders: [[name: 'Authorization', value: "token ${env.GITHUB_TOKEN}"]]
    )
}
