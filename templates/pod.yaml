apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-app"
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  initContainers:
    - name: db-migration
      image: "{{ .Values.initContainerImage.repository }}/{{ .Values.initContainerImage.name }}:{{ .Values.initContainerImage.tag }}"
      imagePullPolicy: {{ .Values.initContainerImage.pullPolicy }}
      env:
        - name: DB_HOST
          value: {{ .Values.postgresql.host | quote }}
        - name: DB_PORT
          value: {{ .Values.postgresql.port | quote }}
        - name: DB_NAME
          value: {{ .Values.postgresql.database | quote }}
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-db-secret"
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-db-secret"
              key: password
      volumeMounts:
        - name: flyway-config
          mountPath: /flyway/conf
          subPath: flyway.conf

  containers:
    - name: webapp
      image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
      imagePullPolicy: {{ .Values.image.pullPolicy }}
      ports:
        - containerPort: 3000
      env:
        - name: DB_HOST
          value: {{ .Values.postgresql.host | quote }}
        - name: DB_PORT
          value: {{ .Values.postgresql.port | quote }}
        - name: DB_NAME
          value: {{ .Values.postgresql.database | quote }}
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-db-secret"
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-db-secret"
              key: password
      livenessProbe:
        httpGet:
          path: {{ .Values.livenessProbe.httpGet.path }}
          port: {{ .Values.livenessProbe.httpGet.port }}
      readinessProbe:
        httpGet:
          path: {{ .Values.readinessProbe.httpGet.path }}
          port: {{ .Values.readinessProbe.httpGet.port }}

  volumes:
    - name: flyway-config
      configMap:
        name: "{{ .Release.Name }}-flyway-config"

  restartPolicy: Always
