apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-app"
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  completions: 1
  backoffLimit: 6
  template:
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                        - "{{ .Release.Name }}"
                topologyKey: "topology.kubernetes.io/zone"
      imagePullSecrets:
        - name: regcred
      containers:
        - name: webapp
          image: "{{ .Values.image.repository }}{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 3000
          env:
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: {{ .Values.kafka.bootstrapServers | quote }}
            - name : KAFKA_TOPIC
              value: {{ .Values.kafka.topic | quote }}
            - name: PORT
              value: {{ .Values.port | quote }}
          resources:
            requests:
              memory: "1.5Gi"
              cpu: "1"
            limits:
              memory: "2Gi"
              cpu: "1.5"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 5
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - /usr/local/bin/readiness-probe.sh
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 2

      restartPolicy: OnFailure
