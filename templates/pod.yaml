apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-app"
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  imagePullSecrets:
    - name: regcred
  initContainers:
    - name: db-migration
      image: "{{ .Values.initContainerImage.repository }}{{ .Values.initContainerImage.name }}:{{ .Values.initContainerImage.tag }}"
      imagePullPolicy: {{ .Values.initContainerImage.pullPolicy }}
      command: ["flyway", "migrate"]
      env:
        - name: DB_HOST
          value: {{ .Values.postgresql.host | quote }}
        - name: DB_PORT
          value: {{ .Values.postgresql.port | quote }}
        - name: DB_DATABASE
          value: {{ .Values.postgresql.database | quote }}
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-db-secret"
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-db-secret"
              key: DB_PASSWORD
        - name: FLYWAY_URL
          value: {{ .Values.flyway.url | quote }}
        - name: FLYWAY_USER
          value: {{ .Values.secret.username | quote }}
        - name: FLYWAY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-db-secret"
              key: FLYWAY_PASSWORD
        - name: FLYWAY_LOCATIONS
          value: {{ .Values.flyway.locations | quote }}
      

  containers:
    - name: webapp
      image: "{{ .Values.image.repository }}{{ .Values.image.name }}:{{ .Values.image.tag }}"
      imagePullPolicy: {{ .Values.image.pullPolicy }}
      ports:
        - containerPort: 3000
      env:
        - name: DB_HOST
          value: {{ .Values.postgresql.host | quote }}
        - name: DB_PORT
          value: {{ .Values.postgresql.port | quote }}
        - name: DB_DATABASE
          value: {{ .Values.postgresql.database | quote }}
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-db-secret"
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-db-secret"
              key: DB_PASSWORD

  restartPolicy: Always
