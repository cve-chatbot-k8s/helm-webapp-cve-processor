pipeline {
  agent any
  tools { nodejs "node" }
  environment {
    GH_TOKEN = credentials('personal_access_token')
  }
  stages {
    stage ('Checkout Code') {
      steps {
        cleanWs()
        checkout scm
      }
    }
    stage ('Wait for Status Checks') {
      steps {
        script {
          // Introducing a delay
          sleep(time: 30, unit: 'SECONDS')
          
          // Check status of required checks
          def status = sh(script: 'curl -H "Authorization: token ${GH_TOKEN}" https://api.github.com/repos/csye7125-su24-team7/helm-webapp-cve-processor/commits/${env.GIT_COMMIT}/status', returnStdout: true).trim()
          def json = readJSON(text: status)
          def state = json.state

          if (state != 'success') {
            error("Required status checks have not passed")
          }
        }
      }
    }
    stage ('Release with Semantic Versioning') {
      when {
        branch 'main'
      }
      steps {
          sh '''
          npm install @semantic-release/commit-analyzer
          npm install @semantic-release/release-notes-generator
          npm install @semantic-release/changelog
          npm install semantic-release-helm
          npm install @semantic-release/git
          npm install @semantic-release/github
          npx semantic-release
          '''
      }
    }
  }
  post {
    always {
      echo 'Pipeline complete'
    }
  }
}
